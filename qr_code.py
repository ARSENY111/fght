from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import FSInputFile
import asyncio
import config
import qrcode


bot = Bot(token=config.TOKEN) #–í–∞—à —Ç–æ–∫–µ–Ω
dp = Dispatcher()


@dp.message(Command(commands=['start']))
async def cmd_start(message: types.Message):
    await message.answer('üëã <b>–ü—Ä–∏–≤–µ—Ç! —è –º–æ–≥—É —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å QR-–ö–æ–¥ –ø–æ —Å—Å—ã–ª–∫–µ –∏–ª–∏ —Ç–µ–∫—Å—Ç—É.  \nüîó  –ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ —Ç–µ–∫—Å—Ç –∏–ª–∏ —Å—Å—ã–ª–∫—É.</b>', parse_mode = 'HTML')


@dp.message(Command(commands=['help']))
async def cmd_help(message: types.Message):
    await message.answer("‚ÅâÔ∏è<b> –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã.</b> \n‚úâÔ∏è <b>–Ω–∞–ø–∏—à–∏ –≤ —Ä–µ–¥–∞–∫—Ü–∏—é</b> <a href='https://t.me/hakinkom_bot'>@hakinkom_bot</a><b>.</b>", disable_web_page_preview = True, parse_mode = 'HTML')

@dp.message()
async def send_text_based_qr(message: types.Message):
    qr = qrcode.QRCode(version=1,
                       error_correction = qrcode.constants.ERROR_CORRECT_L,
                       box_size = 20, 
                       border = 2)

    qr.add_data(message.text)
    qr.make(fit = True)  

    img = qr.make_image(fill_color = 'black', back_color = 'white')
    img.save('photo.png')
    img = FSInputFile('photo.png')

    await message.reply_photo(img, caption = f'<b>‚úÖ –í–∞—à QR-Code —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω  \n\n‚öôÔ∏è –°–æ–∑–¥–∞–Ω–æ —Å –ø–æ–º–æ—â—å—é @wbfril </b>', parse_mode = 'HTML')



async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
    
    
   


